{"ast":null,"code":"import { MAJOR } from '../models/ticket';\nimport { StudentService } from 'src/services/student/student.service';\nconst dateToday = new Date();\nconst studentService = new StudentService();\nexport const TICKETS_MOCKED = [{\n  title: 'IF1 in Paris8',\n  description: '',\n  date: dateToday,\n  student: studentService.getStudents()[0],\n  major: MAJOR.IF,\n  archived: true\n}, {\n  title: 'SI1 in Paris13',\n  description: 'Description du voyage',\n  date: dateToday,\n  student: studentService.getStudents()[1],\n  major: MAJOR.SI,\n  archived: false\n}];","map":{"version":3,"names":["MAJOR","StudentService","dateToday","Date","studentService","TICKETS_MOCKED","title","description","date","student","getStudents","major","IF","archived","SI"],"sources":["/home/florian/Bureau/Etudes/Master 1/Web/1.6/Angular_youssef/Angular_Front/src/mocks/tickets.mock.ts"],"sourcesContent":["import { Ticket,MAJOR } from '../models/ticket';\nimport { StudentService } from 'src/services/student/student.service';\nconst dateToday: Date = new Date();\nconst studentService = new StudentService();\nexport const TICKETS_MOCKED: Ticket[] = [\n  {\n    title: 'IF1 in Paris8',\n    description: '',\n    date: dateToday,\n    student: studentService.getStudents()[0],\n    major: MAJOR.IF,\n    archived: true\n  },\n  {\n    title: 'SI1 in Paris13',\n    description: 'Description du voyage',\n    date: dateToday,\n    student: studentService.getStudents()[1],\n    major: MAJOR.SI,\n    archived: false\n  },\n];\n"],"mappings":"AAAA,SAAgBA,KAAK,QAAQ,kBAAkB;AAC/C,SAASC,cAAc,QAAQ,sCAAsC;AACrE,MAAMC,SAAS,GAAS,IAAIC,IAAI,EAAE;AAClC,MAAMC,cAAc,GAAG,IAAIH,cAAc,EAAE;AAC3C,OAAO,MAAMI,cAAc,GAAa,CACtC;EACEC,KAAK,EAAE,eAAe;EACtBC,WAAW,EAAE,EAAE;EACfC,IAAI,EAAEN,SAAS;EACfO,OAAO,EAAEL,cAAc,CAACM,WAAW,EAAE,CAAC,CAAC,CAAC;EACxCC,KAAK,EAAEX,KAAK,CAACY,EAAE;EACfC,QAAQ,EAAE;CACX,EACD;EACEP,KAAK,EAAE,gBAAgB;EACvBC,WAAW,EAAE,uBAAuB;EACpCC,IAAI,EAAEN,SAAS;EACfO,OAAO,EAAEL,cAAc,CAACM,WAAW,EAAE,CAAC,CAAC,CAAC;EACxCC,KAAK,EAAEX,KAAK,CAACc,EAAE;EACfD,QAAQ,EAAE;CACX,CACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}